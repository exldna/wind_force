/**
 * @fileoverview gRPC-Web generated client stub for schedule
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v2.0.0
// 	protoc              v6.32.0
// source: schedule/v1/service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as schedule_v1_model_event_pb from '../../schedule/v1/model/event_pb.js'; // proto import: "schedule/v1/model/event.proto"
import * as schedule_v1_model_instructor_pb from '../../schedule/v1/model/instructor_pb.js'; // proto import: "schedule/v1/model/instructor.proto"
import * as schedule_v1_model_product_pb from '../../schedule/v1/model/product_pb.js'; // proto import: "schedule/v1/model/product.proto"


export class ScheduleClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateInstructor = new grpcWeb.MethodDescriptor(
    '/schedule.Schedule/CreateInstructor',
    grpcWeb.MethodType.UNARY,
    schedule_v1_model_instructor_pb.CreateInstructorRequest,
    schedule_v1_model_instructor_pb.CreateInstructorResponse,
    (request: schedule_v1_model_instructor_pb.CreateInstructorRequest) => {
      return request.serializeBinary();
    },
    schedule_v1_model_instructor_pb.CreateInstructorResponse.deserializeBinary
  );

  createInstructor(
    request: schedule_v1_model_instructor_pb.CreateInstructorRequest,
    metadata?: grpcWeb.Metadata | null): Promise<schedule_v1_model_instructor_pb.CreateInstructorResponse>;

  createInstructor(
    request: schedule_v1_model_instructor_pb.CreateInstructorRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: schedule_v1_model_instructor_pb.CreateInstructorResponse) => void): grpcWeb.ClientReadableStream<schedule_v1_model_instructor_pb.CreateInstructorResponse>;

  createInstructor(
    request: schedule_v1_model_instructor_pb.CreateInstructorRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: schedule_v1_model_instructor_pb.CreateInstructorResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/schedule.Schedule/CreateInstructor',
        request,
        metadata || {},
        this.methodDescriptorCreateInstructor,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/schedule.Schedule/CreateInstructor',
    request,
    metadata || {},
    this.methodDescriptorCreateInstructor);
  }

  methodDescriptorCreateProduct = new grpcWeb.MethodDescriptor(
    '/schedule.Schedule/CreateProduct',
    grpcWeb.MethodType.UNARY,
    schedule_v1_model_product_pb.CreateProductRequest,
    schedule_v1_model_product_pb.CreateProductResponse,
    (request: schedule_v1_model_product_pb.CreateProductRequest) => {
      return request.serializeBinary();
    },
    schedule_v1_model_product_pb.CreateProductResponse.deserializeBinary
  );

  createProduct(
    request: schedule_v1_model_product_pb.CreateProductRequest,
    metadata?: grpcWeb.Metadata | null): Promise<schedule_v1_model_product_pb.CreateProductResponse>;

  createProduct(
    request: schedule_v1_model_product_pb.CreateProductRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: schedule_v1_model_product_pb.CreateProductResponse) => void): grpcWeb.ClientReadableStream<schedule_v1_model_product_pb.CreateProductResponse>;

  createProduct(
    request: schedule_v1_model_product_pb.CreateProductRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: schedule_v1_model_product_pb.CreateProductResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/schedule.Schedule/CreateProduct',
        request,
        metadata || {},
        this.methodDescriptorCreateProduct,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/schedule.Schedule/CreateProduct',
    request,
    metadata || {},
    this.methodDescriptorCreateProduct);
  }

  methodDescriptorCreateEvent = new grpcWeb.MethodDescriptor(
    '/schedule.Schedule/CreateEvent',
    grpcWeb.MethodType.UNARY,
    schedule_v1_model_event_pb.CreateEventRequest,
    schedule_v1_model_event_pb.CreateEventResponse,
    (request: schedule_v1_model_event_pb.CreateEventRequest) => {
      return request.serializeBinary();
    },
    schedule_v1_model_event_pb.CreateEventResponse.deserializeBinary
  );

  createEvent(
    request: schedule_v1_model_event_pb.CreateEventRequest,
    metadata?: grpcWeb.Metadata | null): Promise<schedule_v1_model_event_pb.CreateEventResponse>;

  createEvent(
    request: schedule_v1_model_event_pb.CreateEventRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: schedule_v1_model_event_pb.CreateEventResponse) => void): grpcWeb.ClientReadableStream<schedule_v1_model_event_pb.CreateEventResponse>;

  createEvent(
    request: schedule_v1_model_event_pb.CreateEventRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: schedule_v1_model_event_pb.CreateEventResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/schedule.Schedule/CreateEvent',
        request,
        metadata || {},
        this.methodDescriptorCreateEvent,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/schedule.Schedule/CreateEvent',
    request,
    metadata || {},
    this.methodDescriptorCreateEvent);
  }

}

